/*
 * Copyright 2018. University of Southern California
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { generateHashString } from "../../common/util"

export interface ICachedFontSize {
  fontSize?: number
}

export interface IButtonModel {
  id: string
  tooltip: string
  label: string
  transitions: { [index: string]: string }
  badges: { [index: string]: string }
  color?: string
  imageURL?: string

  [index: string]: any

  buttonOrigin?: ButtonOrigin
  pageId?: string
  paragraphId?: string
  pageTitle?: string
  sectionTitle?: string
  hashedId?: string
}

export type MODEL = "MODEL"
export const MODEL: MODEL = "MODEL"

export class ButtonModel implements IButtonModel, ICachedFontSize {
  constructor(model: IButtonModel) {
    this.buttonOrigin = ButtonOrigin.excel
    Object.assign(this, model)
    this.fontSize = undefined;
    this.hashedId = generateHashString(this.tooltip + '_' + this.pageId + '_' + this.paragraphId)
  }

  public readonly kind: MODEL = MODEL

  public readonly id!: string

  public readonly tooltip!: string

  public readonly label!: string

  public fontSize?: number

  public readonly transitions!: { [index: string]: string }

  // public readonly color?: string;
  // public readonly imageURL?: string;
  readonly [index: string]: any;

  public readonly badges!: { [index: string]: string }

  // To specify the source for a specific button (i.e. wikipedia, seriousEats etc...)
  public buttonOrigin: ButtonOrigin
  // Page id from where this paragraph belongs to 
  public pageId?: string
  public paragraphId?: string
  // The entire page title 
  public pageTitle?: string
  // The title for the specific section in which this paragraph appears.
  public sectionTitle?: string
  // Unique ID generated by concatenating the button content, the pageID and the paragraphID
  public hashedId?: string

  
}

// Attribute used to specify if a button comes from the excel file or from a search
export enum ButtonOrigin {
  excel,
  wikipedia,
  seriousEats,
}
